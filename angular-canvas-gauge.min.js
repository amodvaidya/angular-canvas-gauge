/**!
 * AngularJS 1.x directive for excellent Mikhus's HTML5 Canvas Gauge
 * https://github.com/Mikhus/canv-gauge
 * https://github.com/dec/angular-canvas-gauge
 * This code is subject to MIT license.
 * Copyright (c) 2016 David Esperalta - http://www.davidesperalta.com/
 */
angular.module("angular-canvas-gauge",[]).directive("canvasGauge",function(){return{restrict:"A",link:function(e,o,i){var n={renderTo:i.id,value:0,width:200,height:200,title:!1,maxValue:100,minValue:0,majorTicks:[],minorTicks:10,strokeTicks:!0,units:!1,valueFormat:{"int":3,dec:2},majorTicksFormat:{"int":1,dec:0},glow:!0,animation:{delay:10,duration:250,fn:"cycle"},colors:{plate:"#fff",majorTicks:"#444",minorTicks:"#666",title:"#888",units:"#888",numbers:"#444",needle:{start:"rgba(240, 128, 128, 1)",end:"rgba(255, 160, 122, .9)",circle:{outerStart:"#f0f0f0",outerEnd:"#ccc",innerStart:"#e8e8e8",innerEnd:"#f5f5f5"},shadowUp:"rgba(2, 255, 255, 0.2)",shadowDown:"rgba(188, 143, 143, 0.45)"},valueBox:{rectStart:"#888",rectEnd:"#666",background:"#babab2",shadow:"rgba(0, 0, 0, 1)"},valueText:{foreground:"#444",shadow:"rgba(0, 0, 0, 0.3)"},circle:{shadow:"rgba(0, 0, 0, 0.5)",outerStart:"#ddd",outerEnd:"#aaa",middleStart:"#eee",middleEnd:"#f0f0f0",innerStart:"#fafafa",innerEnd:"#ccc"}},circles:{outerVisible:!0,middleVisible:!0,innerVisible:!0},valueBox:{visible:!0},valueText:{visible:!0},highlights:[{from:20,to:60,color:"#eee"},{from:60,to:80,color:"#ccc"},{from:80,to:100,color:"#999"}]},t=new Gauge(n);t.draw();var r=function(e){var o=[];if(""===e)return o;var i=e.match(/(?:(?:-?\d*\.)?(-?\d+){1,2} ){2}(?:(?:#|0x)?(?:[0-9A-F|a-f]){3,8}|rgba?\(.*?\))/g);if(null===i)return o;for(var n=0,t=i.length;t>n;n++){var r=i[n].trim().split(/\s+/),a={};r[0]&&""!=r[0]&&(a.from=r[0]),r[1]&&""!=r[1]&&(a.to=r[1]),r[2]&&""!=r[2]&&(a.color=r[2]),o.push(a)}return o},a=function(e){return"true"===e},s=function(){return t.updateConfig({}).config};i.$observe("value",function(e){t.setValue(e)}),i.$observe("glow",function(e){t.updateConfig({glow:a(e)})}),i.$observe("title",function(e){t.updateConfig({title:e})}),i.$observe("units",function(e){t.updateConfig({units:e})}),i.$observe("width",function(e){t.updateConfig({width:e})}),i.$observe("height",function(e){t.updateConfig({height:e})}),i.$observe("minValue",function(e){t.updateConfig({minValue:e})}),i.$observe("maxValue",function(e){t.updateConfig({maxValue:parseFloat(e)})}),i.$observe("minorTicks",function(e){t.updateConfig({minorTicks:parseFloat(e)})}),i.$observe("majorTicks",function(e){t.updateConfig({majorTicks:e.split(" ")})}),i.$observe("highlights",function(e){t.updateConfig({highlights:r(e)})}),i.$observe("strokeTicks",function(e){t.updateConfig({strokeTicks:a(e)})}),i.$observe("animationFn",function(e){t.updateConfig(s().animation.fn=e)}),i.$observe("colorsPlate",function(e){t.updateConfig(s().colors.plate=e)}),i.$observe("colorsUnits",function(e){t.updateConfig(s().colors.units=e)}),i.$observe("colorsTitle",function(e){t.updateConfig(s().colors.title=e)}),i.$observe("colorsNumbers",function(e){t.updateConfig(s().colors.numbers=e)}),i.$observe("colorsNeedleStart",function(e){t.updateConfig(s().colors.needle.start=e)}),i.$observe("colorsNeedleEnd",function(e){t.updateConfig(s().colors.needle.end=e)}),i.$observe("colorsMinorTicks",function(e){t.updateConfig(s().colors.minorTicks=e)}),i.$observe("colorsMajorTicks",function(e){t.updateConfig(s().colors.majorTicks=e)}),i.$observe("valueboxVisible",function(e){t.updateConfig(s().valueBox.visible=a(e))}),i.$observe("valuetextVisible",function(e){t.updateConfig(s().valueText.visible=a(e))}),i.$observe("circleOuterVisible",function(e){t.updateConfig(s().circles.outerVisible=a(e))}),i.$observe("circleMiddleVisible",function(e){t.updateConfig(s().circles.middleVisible=a(e))}),i.$observe("circleInnerVisible",function(e){t.updateConfig(s().circles.innerVisible=a(e))})}}});